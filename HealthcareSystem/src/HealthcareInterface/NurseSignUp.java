/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package HealthcareInterface;

import java.util.Date;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;

import BackendDB4OUtility.DB4OUtility;
import OperatingSystems.OperatingSystem;
import BackendEnterpriseHospital.Hospital;
import BackendEnterpriseHospital.Nurse;
import model.MainJFrameForm;
import java.awt.Color;
import java.util.Random;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;

/**
 *
 * @author vidishaa
 */
public class NurseSignUp extends javax.swing.JPanel {

    /**
     * Creates new form NurseSignUp
     */
    Random rand = new Random();
    
    boolean emptyValidationStatus = true;
    boolean validationCheck = true;
    
    
    MainJFrameForm MainLPage;
    //FirebaseHelper firebaseHelper;
    private OperatingSystem operatingSystem;
    private DB4OUtility dB4OUtility;
    public NurseSignUp(MainJFrameForm MainLPage, DB4OUtility dB4OUtility, OperatingSystem operatingSystem) {
        initComponents();
        this.MainLPage = MainLPage;
        this.dB4OUtility = dB4OUtility;
        this.operatingSystem = operatingSystem;
        for(Hospital h: operatingSystem.getHospiDirectory().getHospitallist()){
            jComboBox1.addItem(h.getEnterprisename());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtNo = new javax.swing.JTextField();
        txt_City = new javax.swing.JLabel();
        txtFullName = new javax.swing.JTextField();
        lbl_uname = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        txtUsrName = new javax.swing.JTextField();
        txt_state = new javax.swing.JLabel();
        lbl_pswd = new javax.swing.JLabel();
        txtState = new javax.swing.JTextField();
        txtPass = new javax.swing.JPasswordField();
        txt_Zip = new javax.swing.JLabel();
        lbl_address = new javax.swing.JLabel();
        txtZip = new javax.swing.JTextField();
        txtAdd = new javax.swing.JTextField();
        btn_signup = new javax.swing.JButton();
        lbl_admintitle = new javax.swing.JLabel();
        btn_back = new javax.swing.JButton();
        lbl_registeryNum = new javax.swing.JLabel();
        lbl_name = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txtGender = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDOB = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtContact = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        lbl_hosplist = new javax.swing.JLabel();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(txtNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(461, 287, 216, -1));

        txt_City.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_City.setText("City:");
        jPanel1.add(txt_City, new org.netbeans.lib.awtextra.AbsoluteConstraints(424, 382, -1, -1));
        jPanel1.add(txtFullName, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 80, 216, -1));

        lbl_uname.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_uname.setText("Username:");
        jPanel1.add(lbl_uname, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 125, -1, -1));
        jPanel1.add(txtCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(461, 375, 216, -1));
        jPanel1.add(txtUsrName, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 118, 216, -1));

        txt_state.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_state.setText("State:");
        jPanel1.add(txt_state, new org.netbeans.lib.awtextra.AbsoluteConstraints(414, 426, -1, -1));

        lbl_pswd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_pswd.setText("Password:");
        jPanel1.add(lbl_pswd, new org.netbeans.lib.awtextra.AbsoluteConstraints(388, 157, -1, -1));
        jPanel1.add(txtState, new org.netbeans.lib.awtextra.AbsoluteConstraints(461, 419, 216, -1));
        jPanel1.add(txtPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 150, 216, -1));

        txt_Zip.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_Zip.setText("Zip Code:");
        jPanel1.add(txt_Zip, new org.netbeans.lib.awtextra.AbsoluteConstraints(397, 471, -1, -1));

        lbl_address.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_address.setText("Address:");
        jPanel1.add(lbl_address, new org.netbeans.lib.awtextra.AbsoluteConstraints(399, 343, -1, -1));
        jPanel1.add(txtZip, new org.netbeans.lib.awtextra.AbsoluteConstraints(461, 464, 216, -1));
        jPanel1.add(txtAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(461, 331, 216, -1));

        btn_signup.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_signup.setText("Sign Up");
        btn_signup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_signupActionPerformed(evt);
            }
        });
        jPanel1.add(btn_signup, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 522, 87, -1));

        lbl_admintitle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lbl_admintitle.setText("Create Nurse Profile");
        jPanel1.add(lbl_admintitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 29, -1, -1));

        btn_back.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_back.setText("Back");
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });
        jPanel1.add(btn_back, new org.netbeans.lib.awtextra.AbsoluteConstraints(461, 522, 87, -1));

        lbl_registeryNum.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_registeryNum.setText("Registered No.:");
        jPanel1.add(lbl_registeryNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(362, 294, -1, -1));

        lbl_name.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_name.setText("Name:");
        jPanel1.add(lbl_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(411, 87, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 250, 216, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Gender:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 188, -1, -1));
        jPanel1.add(txtGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 182, 84, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("DOB:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(549, 188, -1, -1));
        jPanel1.add(txtDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(585, 182, 90, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Contact:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(397, 222, -1, -1));
        jPanel1.add(txtContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 216, 216, -1));

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Backgrounds/AdobeStock_279753293.jpeg"))); // NOI18N
        jLabel4.setText("jLabel4");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        lbl_hosplist.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_hosplist.setText("Hospital:");
        jPanel1.add(lbl_hosplist, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 260, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1438, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1438, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1123, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_signupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_signupActionPerformed
        // TODO add your handling code here:
        try {
            if(EmpytyFieldValidation())
            {
                if(RegexValidation())
                {
                    String address = txtAdd.getText() + "," + txtCity.getText() + "," + txtState.getText() + "," + txtZip.getText();
                    int id = rand.nextInt(99);
                    //Nurse nurse = new Nurse(txtFullName.getText(), txtNo.getText(), address, txtUsrName.getText(), txtPass.getText(), txtGender.getText(), txtDOB.getText(), new Date(),jComboBox1.getSelectedItem().toString());
                    Nurse nurse = new Nurse(txtUsrName.getText(), txtPass.getText(), String.valueOf(id), txtFullName.getText(), address, txtGender.getText(), txtNo.getText(), new Date(), jComboBox1.getSelectedItem().toString());

                    operatingSystem.addNurse(nurse);
                    dB4OUtility.storeSystem(operatingSystem);

                    MainJFrameForm suc = new MainJFrameForm();
                    ((JFrame) SwingUtilities.getWindowAncestor(this)).dispose();
                    suc.setVisible(true);
                }
                else
                    {
                        JOptionPane.showMessageDialog(this,"Some Error in entered data.Please check over the red fields to know more.");
                        validationCheck=true;
                    }
            }
            else{
                    JOptionPane.showMessageDialog(this,"Data Cant be empty. Please check over the red fields to know more.");
                    emptyValidationStatus=true;
                }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,"Patient not registered, Try again");
             emptyValidationStatus=true;
        }
        
    }//GEN-LAST:event_btn_signupActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        // TODO add your handling code here:

        MainJFrameForm suc = new MainJFrameForm();
        ((JFrame) SwingUtilities.getWindowAncestor(this)).dispose();
        suc.setVisible(true);
    }//GEN-LAST:event_btn_backActionPerformed

    
    private boolean RegexValidation() {
    if(!txtFullName.getText().matches("^[a-zA-Z ]+$"))
        {
            txtFullName.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtFullName.setToolTipText("Please enter only characters and space.");
            validationCheck=false;
        }
        
        if(!txtContact.getText().matches("^[0-9]{10}$"))
        {
            txtContact.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtContact.setToolTipText("Please enter a 10 digit number");
            validationCheck=false;
        }


        if(!txtZip.getText().matches("^[0-9]{5}$"))
        {
            txtZip.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtZip.setToolTipText("Please enter a 5 digit number");
            validationCheck=false;
        }

        if(!txtNo.getText().matches("^[0-9]{10}$"))
        {
            txtNo.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtNo.setToolTipText("Please enter a 10 digit number");
            validationCheck=false;
        }

        return validationCheck;


    }   


    private boolean EmpytyFieldValidation() {
        if(txtAdd.getText().equals(null) || txtAdd.getText().trim().isEmpty() )
        {
            txtAdd.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtAdd.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
        if(!txtAdd.getText().equals(null) && !txtAdd.getText().trim().isEmpty() )
        {
            txtAdd.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }

        if(txtCity.getText().equals(null) || txtCity.getText().trim().isEmpty() )
        {
            txtCity.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtCity.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
        if(!txtCity.getText().equals(null) && !txtCity.getText().trim().isEmpty() )
        {
            txtCity.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }

        if(txtFullName.getText().equals(null) || txtFullName.getText().trim().isEmpty() )
        {
            txtFullName.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtFullName.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
        if(!txtFullName.getText().equals(null) && !txtFullName.getText().trim().isEmpty() )
        {
            txtFullName.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }

        if(txtPass.getText().equals(null) || txtPass.getText().trim().isEmpty() )
        {
            txtPass.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtPass.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
        if(!txtPass.getText().equals(null) && !txtPass.getText().trim().isEmpty() )
        {
            txtPass.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }

        if(txtState.getText().equals(null) || txtState.getText().trim().isEmpty() )
        {
            txtState.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtState.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
        if(!txtState.getText().equals(null) && !txtState.getText().trim().isEmpty() )
        {
            txtState.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }

        if(txtUsrName.getText().equals(null) || txtUsrName.getText().trim().isEmpty() )
            {
                txtUsrName.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                txtUsrName.setToolTipText("This Field Cannot be empty");
                emptyValidationStatus= false;
            }
        if(!txtUsrName.getText().equals(null) && !txtUsrName.getText().trim().isEmpty() )
        {
            txtUsrName.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }

        if(txtZip.getText().equals(null) || txtZip.getText().trim().isEmpty() )
            {
                txtZip.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                txtZip.setToolTipText("This Field Cannot be empty");
                emptyValidationStatus= false;
            }
        if(!txtZip.getText().equals(null) && !txtZip.getText().trim().isEmpty() )
        {
            txtZip.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }

        if(txtNo.getText().equals(null) || txtNo.getText().trim().isEmpty() )
            {
                txtNo.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                txtNo.setToolTipText("This Field Cannot be empty");
                emptyValidationStatus= false;
            }
        if(!txtNo.getText().equals(null) && !txtNo.getText().trim().isEmpty() )
        {
            txtNo.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }

        if(txtContact.getText().equals(null) || txtContact.getText().trim().isEmpty() )
            {
                txtContact.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                txtContact.setToolTipText("This Field Cannot be empty");
                emptyValidationStatus= false;
            }
        if(!txtContact.getText().equals(null) && !txtContact.getText().trim().isEmpty() )
        {
            txtContact.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        
        if(txtGender.getText().equals(null) || txtGender.getText().trim().isEmpty() )
            {
                txtGender.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                txtGender.setToolTipText("This Field Cannot be empty");
                emptyValidationStatus= false;
            }
        if(!txtGender.getText().equals(null) && !txtGender.getText().trim().isEmpty() )
        {
            txtGender.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        
        if(txtDOB.getText().equals(null) || txtDOB.getText().trim().isEmpty() )
            {
                txtDOB.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                txtDOB.setToolTipText("This Field Cannot be empty");
                emptyValidationStatus= false;
            }
        if(!txtDOB.getText().equals(null) && !txtDOB.getText().trim().isEmpty() )
        {
            txtDOB.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        
        return emptyValidationStatus;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_signup;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl_address;
    private javax.swing.JLabel lbl_admintitle;
    private javax.swing.JLabel lbl_hosplist;
    private javax.swing.JLabel lbl_name;
    private javax.swing.JLabel lbl_pswd;
    private javax.swing.JLabel lbl_registeryNum;
    private javax.swing.JLabel lbl_uname;
    private javax.swing.JTextField txtAdd;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtDOB;
    private javax.swing.JTextField txtFullName;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtNo;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtUsrName;
    private javax.swing.JTextField txtZip;
    private javax.swing.JLabel txt_City;
    private javax.swing.JLabel txt_Zip;
    private javax.swing.JLabel txt_state;
    // End of variables declaration//GEN-END:variables
}
